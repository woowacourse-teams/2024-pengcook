import org.hidetake.gradle.swagger.generator.GenerateSwaggerUI
import org.springframework.boot.gradle.tasks.bundling.BootJar

buildscript {
	ext {
		restdocsApiSpecVersion = '0.16.2'
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.7'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'jacoco'
	id 'com.epages.restdocs-api-spec' version "${restdocsApiSpecVersion}"
	id 'org.hidetake.swagger.generator' version '2.18.2'
}

group = 'net.pengcook'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

swaggerSources {
	sample {
		setInputFile(file("${project.buildDir}/api-spec/openapi3.yaml"))
	}
}

openapi3 {
	setServer("http://localhost:8080")
	title = "restdocs-swagger API Documentation"
	description = "Spring REST Docs with SwaggerUI."
	version = "0.0.1"
	format = "yaml"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'
	implementation 'com.google.firebase:firebase-admin:9.3.0'
	implementation 'com.auth0:java-jwt:4.4.0'

	runtimeOnly 'mysql:mysql-connector-java:8.0.33'
	runtimeOnly 'com.h2database:h2'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.rest-assured:rest-assured'
	testImplementation "com.epages:restdocs-api-spec-restassured:${restdocsApiSpecVersion}"
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	swaggerUI 'org.webjars:swagger-ui:4.11.1'
}

test {
	useJUnitPlatform()
	systemProperty 'spring.profiles.active', 'test'
}

jar {
	enabled = false
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		csv.required = false
		html.required = false
	}
}

tasks.withType(GenerateSwaggerUI) {
	dependsOn 'openapi3'
}

tasks.register('copySwaggerUI', Copy) {
	dependsOn 'generateSwaggerUISample'
	def generateSwaggerUISampleTask = tasks.named('generateSwaggerUISample', GenerateSwaggerUI).get()
	from("${generateSwaggerUISampleTask.outputDir}")
	into("${project.buildDir}/resources/main/static/docs")
}

tasks.withType(BootJar) {
	dependsOn 'copySwaggerUI'
}
