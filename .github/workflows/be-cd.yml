name: Build and Deploy
on:
  push:
    branches:
      - be/feat/29
jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Cache JDK
        uses: actions/cache@v3
        with:
          path: ~/.sdkman/candidates/java
          key: ${{ runner.os }}-jdk-${{ hashFiles('**/build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-jdk-

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'oracle'
          cache: gradle

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build
        run: ./gradlew build -x test
        working-directory: ./backend

      - name: Run tests
        run: ./gradlew test
        working-directory: ./backend

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_IMAGE_NAME }}:${{ github.sha }} .

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_IMAGE_NAME }}:dev

  deploy:
    needs: build-and-test
    runs-on: [self-hosted, dev]
    steps:
      - name: Pull Docker image from DockerHub
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_IMAGE_NAME }}:dev
        
      - name: Stop existing Docker container
        run: docker stop ${{ secrets.DOCKERHUB_CONTAINER_NAME }} || true
        
      - name: Remove existing Docker container
        run: docker rm ${{ secrets.DOCKERHUB_CONTAINER_NAME }} || true
        
      - name: Run new Docker container
        run: docker run -d --name ${{ secrets.DOCKERHUB_CONTAINER_NAME }} -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_IMAGE_NAME }}:${{ github.sha }}
